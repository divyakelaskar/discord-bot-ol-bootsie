import {
  Client,
  DiscordAPIError,
  EmbedBuilder,
  Events,
  GatewayIntentBits,
  Message,
  Partials,
} from 'discord.js';
import {
  CreateImage,
  CreateImageResponseFormat,
  CreateImageSize,
} from '../src/lib/OpenAI';
import {
  LogLevel,
  Logger,
} from '../src/lib/Logger';
import { Config } from '../src/lib/Config';


const config = new Config();
const discordClient = new Client({
  intents: [
    GatewayIntentBits.DirectMessages,
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent,
  ],
  partials: [ Partials.Channel ],
});
discordClient.login(String(config.Settings.DISCORD_BOT_TOKEN));

discordClient.once(Events.ClientReady, async client => {
  Logger.log({
    message: `Discord client is connected as ${client.user.tag}.`,
    logLevel: LogLevel.Info,
  });
});

discordClient.on(Events.MessageCreate, async message => {
  await _embedImageFromPromptMessage(message);
});

/**
 * Test function to send an image from a prompt received in a Discord message
 * @param message Discord message passed by the Events.MessageCreate event
 */
async function _embedImageFromPromptMessage(message: Message): Promise<void> {
  const promptTag = '{imageprompt}';
  const messageIsImagePrompt = message.content.includes(promptTag);

  if (messageIsImagePrompt) {
    const imagePrompt = message.content.replace(promptTag, '');

    const openAiClient = new CreateImage({
      apiKey: String(config.Settings.OPENAI_API_KEY),
      maxRetries: Number(config.Settings.OPENAI_MAX_RETRIES),
    });

    const response = await openAiClient.createImage({
      numberOfImages: 1,
      prompt: imagePrompt,
      responseFormat: CreateImageResponseFormat.URL,
      size: CreateImageSize.Medium,
      user: message.author.username,
    });

    const embed = new EmbedBuilder()
      .setTitle('ai maed dis')
      .setDescription(imagePrompt)
      .setImage(response.data[0].url)
      .addFields(
        { name: 'Generated by:', value: String(message.author.tag), inline: true },
        { name: 'Tokens remaining:', value: String(5), inline: true }
      )
      .setFooter({
        text: 'jlyons210/discord-bot-ol-bootsie',
        iconURL: 'https://grumple.cloud/assets/discord-bot-ol-bootsie/icon-github.png',
      })
      .setTimestamp();

    try {
      message.channel.send({ embeds: [embed] });
    }
    catch (e) {
      if (e instanceof DiscordAPIError) {
        Logger.log({
          message: e.message,
          logLevel: LogLevel.Error,
        });
      }
    }
  }
}
